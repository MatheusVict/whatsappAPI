{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eveis\\\\OneDrive\\\\Documents\\\\whatsappAPI\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [username, setUsername] = useState();\n  const [html, setHTML] = useState(\"\");\n  const initIns = e => {\n    if (!username) {\n      return;\n    }\n    fetch(\n    // faz uma requisição para a API \"cadastrando\" o usuário \n    `${process.env.REACT_APP_URL}/instance/init?token=${process.env.REACT_APP_SECRET_TOKEN}&key=${username}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(async res => {\n      switch (res.status) {\n        case 200:\n          setTimeout(() => {\n            // delay para a API gerar o qrcode\n            fetch(`${process.env.REACT_APP_URL}/instance/qr?key=${username}`, {\n              // quando a requisição é concluida, faz uma nova para gerar o qrcode (a api só gera qrcodes para usuários já \"cadastrados\")\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n              }\n            }).then(async res => {\n              switch (res.status) {\n                case 200:\n                  return res.text();\n              }\n            }).then(function (text) {\n              let parser = new DOMParser(); // a requisição retorna um código HTML no formato de uma string\n\n              var doc = parser.parseFromString(text, \"text/html\"); // converte a string em formato HTML\n              let qrcode = doc.getElementById(\"qrcode_box\").src;\n              setHTML(qrcode); // salva um state com o valor da src do qrcode\n            });\n          }, 2000);\n          break;\n        case 404:\n          alert(`servidor fora do ar - ${res.status} - ${res.statusText}`);\n          break;\n      }\n    });\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: initIns,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Seu nome..\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"submitButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: html\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"i5xdPL8mDCO9fJKw3jrDCMv0trI=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","Container","Main","username","setUsername","html","setHTML","initIns","e","fetch","process","env","REACT_APP_URL","REACT_APP_SECRET_TOKEN","method","headers","Accept","then","res","status","setTimeout","text","parser","DOMParser","doc","parseFromString","qrcode","getElementById","src","alert","statusText","preventDefault","target","value"],"sources":["C:/Users/eveis/OneDrive/Documents/whatsappAPI/src/pages/Main.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"./styles\";\r\n\r\nfunction Main() {\r\n  const [username, setUsername] = useState();\r\n  const [html, setHTML] = useState(\"\");\r\n\r\n  const initIns = (e) => {\r\n    if (!username) {\r\n      return\r\n    }\r\n    \r\n    fetch( // faz uma requisição para a API \"cadastrando\" o usuário \r\n      `${process.env.REACT_APP_URL}/instance/init?token=${process.env.REACT_APP_SECRET_TOKEN}&key=${username}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }\r\n    ).then(async (res) => {\r\n      switch (res.status) {\r\n        case 200:\r\n          setTimeout(() => { // delay para a API gerar o qrcode\r\n            fetch(`${process.env.REACT_APP_URL}/instance/qr?key=${username}`, { // quando a requisição é concluida, faz uma nova para gerar o qrcode (a api só gera qrcodes para usuários já \"cadastrados\")\r\n              method: \"GET\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              },\r\n            })\r\n              .then(async (res) => {\r\n                switch (res.status) {\r\n                  case 200:\r\n                    return res.text();\r\n                }\r\n              })\r\n              .then(function (text) {\r\n                let parser = new DOMParser(); // a requisição retorna um código HTML no formato de uma string\r\n\r\n                var doc = parser.parseFromString(text, \"text/html\"); // converte a string em formato HTML\r\n                let qrcode = doc.getElementById(\"qrcode_box\").src;\r\n\r\n                setHTML(qrcode); // salva um state com o valor da src do qrcode\r\n              });\r\n          }, 2000);\r\n          break;\r\n        case 404:\r\n          alert(`servidor fora do ar - ${res.status} - ${res.statusText}`);\r\n          break;\r\n      }\r\n    });\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <form onSubmit={initIns}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Seu nome..\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input type=\"submit\" className=\"submitButton\" />\r\n      </form>\r\n      <img src={html} /> {/** renderiza o qr code, a partir do momento em que o qrcode for escaneado, os dados do usuário serão salvos no banco de dados */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,UAAU;AAAC;AAErC,SAASC,IAAI,GAAG;EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,EAAE;EAC1C,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMO,OAAO,GAAIC,CAAC,IAAK;IACrB,IAAI,CAACL,QAAQ,EAAE;MACb;IACF;IAEAM,KAAK;IAAE;IACJ,GAAEC,OAAO,CAACC,GAAG,CAACC,aAAc,wBAAuBF,OAAO,CAACC,GAAG,CAACE,sBAAuB,QAAOV,QAAS,EAAC,EACxG;MACEW,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,MAAM,EAAE;MACV;IACF,CAAC,CACF,CAACC,IAAI,CAAC,MAAOC,GAAG,IAAK;MACpB,QAAQA,GAAG,CAACC,MAAM;QAChB,KAAK,GAAG;UACNC,UAAU,CAAC,MAAM;YAAE;YACjBX,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,aAAc,oBAAmBT,QAAS,EAAC,EAAE;cAAE;cAClEW,MAAM,EAAE,KAAK;cACbC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClCC,MAAM,EAAE;cACV;YACF,CAAC,CAAC,CACCC,IAAI,CAAC,MAAOC,GAAG,IAAK;cACnB,QAAQA,GAAG,CAACC,MAAM;gBAChB,KAAK,GAAG;kBACN,OAAOD,GAAG,CAACG,IAAI,EAAE;cAAC;YAExB,CAAC,CAAC,CACDJ,IAAI,CAAC,UAAUI,IAAI,EAAE;cACpB,IAAIC,MAAM,GAAG,IAAIC,SAAS,EAAE,CAAC,CAAC;;cAE9B,IAAIC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACJ,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;cACrD,IAAIK,MAAM,GAAGF,GAAG,CAACG,cAAc,CAAC,YAAY,CAAC,CAACC,GAAG;cAEjDtB,OAAO,CAACoB,MAAM,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC;UACN,CAAC,EAAE,IAAI,CAAC;UACR;QACF,KAAK,GAAG;UACNG,KAAK,CAAE,yBAAwBX,GAAG,CAACC,MAAO,MAAKD,GAAG,CAACY,UAAW,EAAC,CAAC;UAChE;MAAM;IAEZ,CAAC,CAAC;IAEFtB,CAAC,CAACuB,cAAc,EAAE;EACpB,CAAC;EAED,oBACE,QAAC,SAAS;IAAA,wBACR;MAAM,QAAQ,EAAExB,OAAQ;MAAA,wBACtB;QACE,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,YAAY;QACxB,QAAQ,EAAGC,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACwB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7C,eACF;QAAO,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3C,eACP;MAAK,GAAG,EAAE5B;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,KAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEhB;AAAC,GApEQH,IAAI;AAAA,KAAJA,IAAI;AAsEb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}